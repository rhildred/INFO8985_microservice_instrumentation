---
- hosts: all
  tasks:
  - name: download k3d
    ansible.builtin.command: curl https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh -o /tmp/installk3d.sh
    args:
      creates: /tmp/installk3d.sh
  - name: install k3d
    ansible.builtin.command: bash /tmp/installk3d.sh
    args:
      creates: /usr/local/bin/k3d
  - name: download helm
    ansible.builtin.command: curl -o /tmp/installhelm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    args:
      creates: /tmp/installhelm.sh
  - name: install helm
    ansible.builtin.command: bash /tmp/installhelm.sh
    args:
      creates: /usr/local/bin/helm
  - name: change permissions on helm
    become: true
    ansible.builtin.file:
      path: /usr/local/bin/helm
      mode: o=x  
  - name: download kubectl
    ansible.builtin.command: curl -Lo /tmp/installkubectl https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl
    args:
      creates: /tmp/installkubectl
  - name: install kubectl
    ansible.builtin.command: sudo install -o root -g root -m 0755 /tmp/installkubectl /usr/local/bin/kubectl
    args:
      creates: /usr/local/bin/kubectl
  - name: create cluster
    ansible.builtin.command: k3d cluster create local-k8s --volume '{{ lookup('ansible.builtin.env', 'PWD') }}'/storage:/var/storage
    args:
      creates: ~/.kube/config
  - name: create persistent volume
    kubernetes.core.k8s:
      state: present
      src: ./kube/persistent.yaml
  - name: Add signoz chart repo
    kubernetes.core.helm_repository:
      name: signoz
      repo_url: "https://charts.signoz.io"
  - name: Deploy latest version of signoz
    kubernetes.core.helm:
      name: my-signoz
      chart_ref: signoz/signoz
      release_namespace: default
  - name: Install flask python package
    ansible.builtin.pip:
      name: flask
  - name: Install opentelemetry-distro python package
    ansible.builtin.pip:
      name: opentelemetry-distro
  - name: Install opentelemetry-exporter-otlp python package
    ansible.builtin.pip:
      name: opentelemetry-exporter-otlp
  - name: Execute the command in remote shell; stdout goes to the specified file on the remote
    ansible.builtin.shell: opentelemetry-bootstrap -a install      
  - name: forward port 3301
    ansible.builtin.command: "nohup 'kubectl port-forward svc/my-signoz-frontend 3301:3301'&"
    args:
      creates: nohup.out
  - name: forward port 4317
    ansible.builtin.command: "nohup 'kubectl port-forward svc/my-signoz-otel-collector 4317:4317'> nohup2.out &"
    args:
      creates: nohup2.out

